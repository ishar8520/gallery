services:
  nginx:
    container_name: nginx
    build: 
      context: './services/nginx'
    networks:
      - gallery-network
    ports:
      - '8000:8080'
    volumes:
      - 'nginx_logs_data:/opt/bitnami/nginx/logs'
    depends_on:
      auth-service:
        condition: service_healthy
      gallery-service:
        condition: service_healthy

  auth-service:
    container_name: auth-service
    build:
      context: ./services/auth
    networks:
      - gallery-network
    environment:
      - AUTH_POSTGRESQL_USERNAME=$AUTH_POSTGRESQL_USERNAME
      - AUTH_POSTGRESQL_PASSWORD=$AUTH_POSTGRESQL_PASSWORD
      - AUTH_POSTGRESQL_DATABASE=$AUTH_POSTGRESQL_DATABASE
      - AUTH_POSTGRESQL_HOST=auth-postgres
      - AUTH_POSTGRESQL_PORt=5432
    depends_on:
      auth-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8000/auth/api/v1/_healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  auth-postgres:
    container_name: auth-postgres
    image: bitnami/postgresql:17
    networks:
      - gallery-network
    ports:
      - '5432:5432'
    environment:
      - POSTGRESQL_USERNAME=$AUTH_POSTGRESQL_USERNAME
      - POSTGRESQL_PASSWORD=$AUTH_POSTGRESQL_PASSWORD
      - POSTGRESQL_DATABASE=$AUTH_POSTGRESQL_DATABASE
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=$AUTH_POSTGRESQL_USERNAME --dbname=$AUTH_POSTGRESQL_DATABASE"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  gallery-service:
    container_name: gallery-service
    build:
      context: ./services/gallery
    networks:
      - gallery-network
    environment:
      - PROJECT_TITLE=gallery
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_USER=$MINIO_USER
      - MINIO_PASSWORD=$MINIO_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8000/api/v1/_healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  minio:
    container_name: gallery-minio
    build:
      context: './services/minio'
    networks:
      - gallery-network
    environment:
      - MINIO_ROOT_USER=$MINIO_USER
      - MINIO_ROOT_PASSWORD=$MINIO_PASSWORD
    volumes:
      - 'minio_data:/data'
    ports:
      - '9000:9000'
      - '9001:9001'

networks:
  gallery-network:

volumes:
  nginx_logs_data:
  minio_data: